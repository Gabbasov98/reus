{"version":3,"sources":["b-header.js","c-timer.js","01_main.js"],"names":["$","click","toggleClass","formatTimerItems","num","toString","split","renderElements","forEach","el","fn","extend","countdown","props","jQuery","until","Date","state","days","hours","minutes","seconds","render","this","empty","append","update","setInterval","counter","getTime","clearInterval","Math","floor","snow","amount","random","min","max","svg","index","replaceWith","now","currentDay","getDate","currentMonth","getMonth","counterYear","getFullYear","fix100vh","vh","window","innerHeight","document","documentElement","style","setProperty","addEventListener","getScrollBarSize"],"mappings":"AAAAA,EAAE,WAAWC,OAAM,WACfD,EAAE,WAAWE,YAAY,SACzBF,EAAE,QAAQE,YAAY;ACF1B,SAASC,iBAAiBC,GACtBA,EAAMA,EAAIC,WAAWC,MAAM,IAC3B,IAAIC,EAAiB,eASrB,OANAH,EAAII,QAAQC,IACRF,GAAkB,iDACoBE,8BAInCF,EAGXP,GAAE,WACEA,EAAEU,GAAGC,OAAO,CACRC,UAAW,SAASC,GAChBA,EAAQC,OAAOH,OAAO,CAClBI,MAAO,IAAIC,MACZH,GACH,MAAMI,EAAQ,CACVC,KAAM,EACNC,MAAO,EACPC,QAAS,EACTC,QAAS,GAEb,IAAIC,EAAUT,IACV,MAAMK,KAAEA,EAAIC,MAAEA,EAAKC,QAAEA,EAAOC,QAAEA,GAAYR,EAC1CU,KAAKC,QACLD,KAAKE,OAAO,0DACmC,GAARP,EAAY,MAAQ,2KAGjBf,iBAAiBe,+TAOjB,GAATC,EAAa,OAAS,4KAGAhB,iBAAbgB,EAAQ,GAAsB,IAAMA,EAA0BA,kTAO5D,GAAXC,EAAe,SAAW,8KAGFjB,iBAAfiB,EAAU,GAAsB,IAAMA,EAA4BA,iTAOhE,GAAXC,EAAe,SAAW,8KAGFlB,iBAAfkB,EAAU,GAAsB,IAAMA,EAA4BA,6QAShHC,EAAOL,GACP,IAAIS,EAASC,aAAY,WACrB,IAAIC,EAAUf,EAAME,OAAS,IAAIC,MAAOa,UACxC,GAAID,GAAW,EAEX,OADAE,cAAcJ,IACP,EAEXT,EAAMC,KAAOa,KAAKC,MAAMJ,EAAU,OAClCX,EAAME,MAAQY,KAAKC,MAAOJ,EAAU,MAAyB,MAC7DX,EAAMG,QAAUW,KAAKC,MAAOJ,EAAU,KAAoB,KAC1DX,EAAMI,QAAUU,KAAKC,MAAOJ,EAAU,IAAe,KACrDN,EAAOL,KACR,KACH,OAAOM,MAEXU,KAAM,SAASpB,GACXA,EAAQC,OAAOH,OAAO,CAClBuB,OAAQ,IACTrB,GACH,IAAIsB,EAAS,CAACC,EAAKC,IACRN,KAAKI,UAAYE,EAAMD,GAAOA,EAErCE,EAAM,wDACV,IAAK,IAAIC,EAAQ,EAAGA,EAAQ1B,EAAMqB,OAAQK,IACtCD,GAAO,+BAA+BH,EAAO,EAAG,WAAWA,EAAO,EAAG,eAAeA,EAAO,EAAG,WAElGG,GAAO,SACPf,KAAKiB,YAAYF,MAIzB,MAAMG,EAAM,IAAIzB,KAIV0B,EAAaD,EAAIE,UACjBC,EAAeH,EAAII,WACnBC,EAAgBJ,GAJL,IAIiCE,EAAe,IAH9C,EAGmEH,EAAIM,cAAgB,EAAIN,EAAIM,cAClH/C,EAAE,cAAcY,UAAU,CACtBG,MAAO,IAAIC,KAAK,YAA2C8B,KAE/D9C,EAAE,SAASiC,KAAK,CACZC,OAAQ;ACvGhB,SAASc,WACL,IAAIC,EAA0B,IAArBC,OAAOC,YAChBC,SAASC,gBAAgBC,MAAMC,YAAY,OAAWN,EAAH,MAbvDC,OAAOM,iBAAiB,mBAAoB,KACxCR,WACAE,OAAOM,iBAAiB,SAAU,KAC9BR,WACAS,qBAGJA","file":"../components/main.min.js","sourcesContent":["$(\".burger\").click(function () {\r\n    $(\".header\").toggleClass(\"_open\")\r\n    $(\"body\").toggleClass(\"fixed-body\")\r\n})\r\n\r\n","function formatTimerItems(num){\r\n    num = num.toString().split('')\r\n    let renderElements = `\r\n    \r\n    `\r\n    num.forEach(el => {\r\n        renderElements += `\r\n        <span class=\"countdown__item\"><span>${el}</span></span>\r\n        `\r\n    })\r\n\r\n    return renderElements\r\n}\r\n\r\n$(function(){\r\n    $.fn.extend({\r\n        countdown: function(props){\r\n            props = jQuery.extend({ //Default props\r\n                until: new Date(),\r\n            }, props);\r\n            const state = {\r\n                days: 0,\r\n                hours: 0,\r\n                minutes: 0,\r\n                seconds: 0\r\n            };\r\n            let render = (props) => {\r\n                const { days, hours, minutes, seconds } = props;\r\n                this.empty();\r\n                this.append(`\r\n        <div class=\"countdownProp _days\" date-count=\"${days == 1 ? 'day' : 'days'}\">\r\n            <div class=\"countdownProp__item\">\r\n                <div class=\"countdownProp__item-top\">\r\n                    <span class=\"countdownProp__num h1\">${formatTimerItems(days)}</span>                \r\n                </div>\r\n                <div class=\"countdownProp__item-bottom\">\r\n                    <span class=\"countdownProp__title\">День</span>                \r\n                </div>               \r\n            </div> \r\n        </div>\r\n        <div class=\"countdownProp\" date-count=\"${hours == 1 ? 'hour' : 'hours'}\">\r\n            <div class=\"countdownProp__item\">\r\n                <div class=\"countdownProp__item-top\">\r\n                    <span class=\"countdownProp__num h1\">${hours < 10 ? formatTimerItems('0' + hours) : formatTimerItems(hours)}</span>                \r\n                </div>\r\n                <div class=\"countdownProp__item-bottom\">\r\n                    <span class=\"countdownProp__title\">Часов</span>                \r\n                </div>  \r\n            </div>\r\n        </div>\r\n        <div class=\"countdownProp\" date-count=\"${minutes == 1 ? 'minute' : 'minutes'}\">\r\n            <div class=\"countdownProp__item\">\r\n                <div class=\"countdownProp__item-top\">\r\n                    <span class=\"countdownProp__num h1\">${minutes < 10 ? formatTimerItems('0' + minutes) : formatTimerItems(minutes)}</span>                \r\n                </div>\r\n                <div class=\"countdownProp__item-bottom\">\r\n                    <span class=\"countdownProp__title\">Минут</span>                \r\n                </div> \r\n            </div>\r\n        </div>\r\n        <div class=\"countdownProp\" date-count=\"${seconds == 1 ? 'second' : 'seconds'}\">\r\n            <div class=\"countdownProp__item\">\r\n                <div class=\"countdownProp__item-top\">\r\n                    <span class=\"countdownProp__num h1\">${seconds < 10 ? formatTimerItems('0' + seconds) : formatTimerItems(seconds)}</span>                \r\n                </div>\r\n                <div class=\"countdownProp__item-bottom\">\r\n                    <span class=\"countdownProp__title\">Секунд</span>                \r\n                </div> \r\n            </div>\r\n        </div>\r\n        `);\r\n            }\r\n            render(state);\r\n            let update = setInterval(function(){\r\n                let counter = props.until - (new Date().getTime());\r\n                if (counter <= 0) {\r\n                    clearInterval(update);\r\n                    return false;\r\n                }\r\n                state.days = Math.floor(counter / (1000 * 60 * 60 * 24));\r\n                state.hours = Math.floor((counter % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n                state.minutes = Math.floor((counter % (1000 * 60 * 60)) / (1000 * 60));\r\n                state.seconds = Math.floor((counter % (1000 * 60)) / 1000);\r\n                render(state);\r\n            }, 1000);\r\n            return this;\r\n        },\r\n        snow: function(props){\r\n            props = jQuery.extend({ //Default props\r\n                amount: 60\r\n            }, props);\r\n            let random = (min, max) => {\r\n                return Math.random() * (max - min) + min;\r\n            }\r\n            let svg = '<svg class=\"snow\" xmlns=\"http://www.w3.org/2000/svg\">';\r\n            for (let index = 0; index < props.amount; index++) {\r\n                svg += `<circle class=\"particle\" r=\"${random(1, 3)}\" cx=\"${random(1, 100)}%\" cy=\"-${random(1, 100)}\" />`;\r\n            }\r\n            svg += '</svg>';\r\n            this.replaceWith(svg);\r\n        }\r\n    })\r\n\r\n    const now = new Date();\r\n    const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n    const finalDay = 31;\r\n    const finalMonth = 6;\r\n    const currentDay = now.getDate();\r\n    const currentMonth = now.getMonth();\r\n    const counterYear = ((currentDay >= finalDay) && (currentMonth + 1 === finalMonth)) ? now.getFullYear() + 1 : now.getFullYear();\r\n    $('.countdown').countdown({\r\n        until: new Date(`${months[finalMonth - 1]}, ${finalDay}, ${counterYear}`) // you can add time optionally ('Dec, 25, 2020 00:00:00')\r\n    })\r\n    $('.snow').snow({\r\n        amount: 100 //Number of particles\r\n    });\r\n});\r\n","window.addEventListener('DOMContentLoaded', () => {\r\n    fix100vh();\r\n    window.addEventListener('resize', () => {\r\n        fix100vh();\r\n        getScrollBarSize()\r\n    })\r\n\r\n    getScrollBarSize()\r\n\r\n})\r\n\r\nfunction fix100vh() {\r\n    let vh = window.innerHeight * 0.01;\r\n    document.documentElement.style.setProperty('--vh', `${vh}px`);\r\n}\r\n"]}